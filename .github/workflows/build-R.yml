name: R-CMD-check

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} (${{ matrix.r }})

    strategy:
      fail-fast: false
      matrix:
        r: [release]
        os: [ubuntu-latest, macos-latest, windows-latest]

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/xenial/latest

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sudo apt install -y r-api-3.4
          sudo apt install r-cran-stringi
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install R dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("devtools")
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Check package
        run: devtools::check()
        shell: Rscript {0}

      - name: Report test coverage
        run: covr::codecov()
        shell: Rscript {0}
